<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>O hře</value>
  </data>
  <data name="After clicking on a card you will hear a call from an individual animal." xml:space="preserve">
    <value>Po kliknutí na kartu uslyšíš hlas jedince daného druhu. Tvým úkolem je najít dvě karty s podobným hlasem, které patří tomu samému jedinci. </value>
  </data>
  <data name="Analysis of results will allow us to test what is the most efficient design" xml:space="preserve">
    <value>Výsledky experimentu nám pomohou pochopit, jak má vypadat efektivní signál individuální identity. Přišlo Ti snadnější poznat jedince u některých druhů? </value>
  </data>
  <data name="and you can download the source code from" xml:space="preserve">
    <value>a je možné si ho stáhnout zde:</value>
  </data>
  <data name="Common UFO Owl" xml:space="preserve">
    <value>UFO sova obecná</value>
  </data>
  <data name="Conservation of Little owls in Czech Republic" xml:space="preserve">
    <value>Ochrana sýčka v Česku </value>
  </data>
  <data name="Drunken UFO Owl" xml:space="preserve">
    <value>UFO sova opilá</value>
  </data>
  <data name="Enter your email" xml:space="preserve">
    <value>Zadej svůj email, pokud chceš získat informace o výsledcích tohoto pokusu a možých budoucích variant hry</value>
  </data>
  <data name="Enter your nick name to identify your games" xml:space="preserve">
    <value>Zadej svoje jméno / přezdívku, aby bylo možné identifikovat tvé hry</value>
  </data>
  <data name="Evolution of identity signalling in vocalizations" xml:space="preserve">
    <value>Projekt: Evoluce individuality v hlasech živočichů </value>
  </data>
  <data name="Find more information here" xml:space="preserve">
    <value>Více informací najdeš zde</value>
  </data>
  <data name="Game" xml:space="preserve">
    <value>Hra</value>
  </data>
  <data name="Game finished" xml:space="preserve">
    <value>Konec hry</value>
  </data>
  <data name="Game Results" xml:space="preserve">
    <value>Výsledky</value>
  </data>
  <data name="In this game, you will hear the territorial calls of" xml:space="preserve">
    <value>V této hře uslyšíš territoriální hlasy tohoto druhu: </value>
  </data>
  <data name="Lazy UFO Owl" xml:space="preserve">
    <value>UFO sova lenivá</value>
  </data>
  <data name="Little Owl" xml:space="preserve">
    <value>Sýček obecný</value>
  </data>
  <data name="Little owls were recorded by Martin Šálek and Pavel Linhart." xml:space="preserve">
    <value>Nahrávky sýčků pořídili Martin Šálek a Pavel Linhart. </value>
  </data>
  <data name="Match-match animal individuals memory game was created by" xml:space="preserve">
    <value>Akustické pexeso "Match-Match Animal Individuals" vytvořil Jakub Linhart podle návrhu Pavla Linharta v rámci projektu Polonez „ Evolution of individual identity in vocalizations”. Projekt byl podpořen National Science Centre, Poland (UMO-2015/19/P/NZ8/02507) v rámci evropského programu Horizon 2020 akce Marie Skłodowska-Curie (č. 665778).</value>
  </data>
  <data name="Mean number of turns in" xml:space="preserve">
    <value>Průměrný počet tahů</value>
  </data>
  <data name="Nickname" xml:space="preserve">
    <value>Přezdívka</value>
  </data>
  <data name="percent of players" xml:space="preserve">
    <value>procent hráčů</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Hra</value>
  </data>
  <data name="Sleepy UFO Owl" xml:space="preserve">
    <value>UFO sova usínající</value>
  </data>
  <data name="Thank you for playing!" xml:space="preserve">
    <value>Díky! Každá dohraná hra se počítá.</value>
  </data>
  <data name="The best result for this game was" xml:space="preserve">
    <value>Nejlepší výsledek v této hře byl </value>
  </data>
  <data name="The source code is published under" xml:space="preserve">
    <value>Zdrojový kód je dostupný pod </value>
  </data>
  <data name="Try again" xml:space="preserve">
    <value>Hraj znovu </value>
  </data>
  <data name="turns" xml:space="preserve">
    <value>tazích</value>
  </data>
  <data name="Welcome to the acoustic memory game Match-Match Animal Individuals!" xml:space="preserve">
    <value>Vítej v akustickém pexesu "Match-Match Animal Individuals!"</value>
  </data>
  <data name="Well done! You matched all individuals of" xml:space="preserve">
    <value>Výborně! Našel / Našla jsi všechny páry hlasů! </value>
  </data>
  <data name="You have finished the game in" xml:space="preserve">
    <value>Dokončil jsi hru v</value>
  </data>
  <data name="Your result was better than the result achieved by" xml:space="preserve">
    <value>Svým výsledkem jsi předčil </value>
  </data>
  <data name="_Turns" xml:space="preserve">
    <value>Tahy</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Zavřít</value>
  </data>
</root>